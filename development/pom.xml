<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>activehealth</groupId>
	<artifactId>score</artifactId>
	<packaging>pom</packaging>
	<version>2017.05-SNAPSHOT</version>
	<name>score</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<junit.version>4.11</junit.version>
		<log4j.version>1.2.16</log4j.version>
		<commons-lang.version>2.4</commons-lang.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-codec.version>1.10</commons-codec.version>
		<springframework.version>3.1.1.RELEASE</springframework.version>
		<ahm.core.version>2.1.24-SNAPSHOT</ahm.core.version>
		<sharedutils.version>1.0.5-SNAPSHOT</sharedutils.version>
		<jackson-mapper-asl.version>1.9.13</jackson-mapper-asl.version>
		<commons-beanutils.version>20030211.134440</commons-beanutils.version>
		<commons-collections.version>3.2.1</commons-collections.version>
		<easymock.version>3.3.1</easymock.version>
		<fasterxml.jackson.version>2.5.0</fasterxml.jackson.version>
		<cobertura.version>2.1.1</cobertura.version>
		<rulesapp.version>0.0.16-SNAPSHOT</rulesapp.version>
	</properties>

	<build>
		<plugins>
			<!-- This is here to make sure when the maven project is imported/updated, 
				jre 1.6 setting is retained -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<testSource>1.7</testSource>
					<testTarget>1.7</testTarget>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<inherited>true</inherited>
				<version>2.13</version>
				<configuration>
					<showSuccess>false</showSuccess>
					<testFailureIgnore>true</testFailureIgnore>
					<includes>
						<include>**/*Test.class</include>
					</includes>
					<excludes>
						<exclude>**/integration/*Test.class</exclude>
					</excludes>
					<forkMode>always</forkMode>
					<runOrder>alphabetical</runOrder>
					<argLine>-Djava.library.path=${r.library.path}</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>.</directory>
							<includes>
								<include>**/cobertura.ser</include>
								<include>**/sum.ser</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifestEntries>
							<mode>development</mode>
							<Version>${VERSION_NUMBER}</Version>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<!-- Ignore/Execute plugin execution -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- copy-dependency plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.cxf
										</groupId>
										<artifactId>
											cxf-codegen-plugin
										</artifactId>
										<versionRange>[2.4.1,)</versionRange>
										<goals>
											<goal>wsdl2java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.1.1,)
										</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											jspc-maven-plugin
										</artifactId>
										<versionRange>
											[1.4.6,)
										</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>add-source</goal>
											<goal>add-test-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>


	<scm>
		<connection>scm:svn:svn://192.168.4.33/careengine/dev/trunk</connection>
		<developerConnection>scm:svn:svn://192.168.4.33/careengine/dev/trunk</developerConnection>
		<url>http://192.168.4.33/careengine/dev/trunk</url>
	</scm>

	<distributionManagement>
		<repository>
			<id>archiva.central</id>
			<url>http://192.168.4.18:8080/archiva/repository/internal</url>
		</repository>
	</distributionManagement>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<aggregate>true</aggregate>
					<formats>
						<format>xml</format>
					</formats>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>cobertura</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>RELEASE</version>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<!-- profile used to run all the integration tests without running non-integration 
			tests -->
		<profile>
			<id>run-all-integration-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<batch.processor.type>instramentedBatchProcessor</batch.processor.type>
				<cdm.batch.processor.type>instramentedCdmBatchProcessor</cdm.batch.processor.type>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<inherited>true</inherited>
						<version>2.10</version>
						<configuration>
							<showSuccess>false</showSuccess>
							<testFailureIgnore>true</testFailureIgnore>
							<excludes>
								<exclude>**/*Test.class</exclude>
							</excludes>
							<forkMode>always</forkMode>
							<argLine>-Djava.library.path=${r.library.path}</argLine>
						</configuration>
						<executions>
							<execution>
								<id>integration-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>**/DbInsertTest.class</exclude>
										<exclude>**/RunResultsHandlerTest.class</exclude>
									</excludes>
									<includes>
										<include>**/integration/*Test.class</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- profile used to run all the integration AND non-integration tests -->
		<profile>
			<id>run-all-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<batch.processor.type>instramentedBatchProcessor</batch.processor.type>
				<cdm.batch.processor.type>instramentedCdmBatchProcessor</cdm.batch.processor.type>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<inherited>true</inherited>
						<version>2.10</version>
						<configuration>
							<showSuccess>false</showSuccess>
							<testFailureIgnore>true</testFailureIgnore>
							<includes>
								<include>**/*Test.class</include>
							</includes>
							<excludes>
								<exclude>**/integration/*Test.class</exclude>
							</excludes>
							<forkMode>always</forkMode>
							<argLine>-Djava.library.path=${r.library.path}</argLine>
						</configuration>
						<executions>
							<execution>
								<id>integration-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>**/DbInsertTest.class</exclude>
										<exclude>**/RunResultsHandlerTest.class</exclude>
									</excludes>
									<includes>
										<include>**/integration/*Test.class</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- profile used to run all the integration tests without running non-integration 
			tests used for performance testing -->
		<profile>
			<id>perf-run-all-integration-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<batch.processor.type>instramentedBatchProcessor</batch.processor.type>
				<cdm.batch.processor.type>instramentedCdmBatchProcessor</cdm.batch.processor.type>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<inherited>true</inherited>
						<version>2.10</version>
						<configuration>
							<showSuccess>false</showSuccess>
							<testFailureIgnore>true</testFailureIgnore>
							<excludes>
								<exclude>**/*Test.class</exclude>
							</excludes>
							<forkMode>always</forkMode>
							<parallel>classes</parallel>
							<threadCount>5</threadCount>
							<argLine>-Djava.library.path=${r.library.path}</argLine>
						</configuration>
						<executions>
							<execution>
								<id>integration-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>**/DbInsertTest.class</exclude>
										<exclude>**/RunResultsHandlerTest.class</exclude>
									</excludes>
									<includes>
										<include>**/integration/*Test.class</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- This profile is used when creating a coverage report -->
		<profile>
			<id>useCobertura</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<dependencies>
				<!-- Adding cobertura as a compalation time dependance to ALL child projects 
					so it's jar will be where it needs to be. It should not be referenced dirrectly 
					by the children. This must be scoped to compile for the jar to be properly 
					placed in the various lib folders. -->
				<dependency>
					<groupId>net.sourceforge.cobertura</groupId>
					<artifactId>cobertura</artifactId>
					<version>${cobertura.version}</version>
					<scope>compile</scope>
					<exclusions>
						<exclusion>
							<!-- asm is only needed during instumentation. -->
							<groupId>asm</groupId>
							<artifactId>asm</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<!-- For this plugin to work correctly as configured below, the jars 
							of the dependant projects need to have been build. -->
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-dependencies-for-cobertura</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<includeScope>compile</includeScope>
									<outputDirectory>target/coberturaAuxClasspath</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profile used to run only a single (integration) test, rather than 
			the whole suite. Add -Dsingle.test.run=TEST_NAME_HERE at the command line 
			to specify the test to run. -->
		<profile>
			<id>run-single-test</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<batch.processor.type>instramentedBatchProcessor</batch.processor.type>
				<cdm.batch.processor.type>instramentedCdmBatchProcessor</cdm.batch.processor.type>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.13</version>
						<executions>
							<execution>
								<id>integration-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<!-- for some reason this exclusion clause needs to be here :( -->
									<excludes>
										<exclude>**/DbInsertTest.class</exclude>
										<exclude>**/RunResultsHandlerTest.class</exclude>
									</excludes>
									<includes>
										<include>**/${single.test.run}.class</include>
									</includes>
								</configuration>
							</execution>
						</executions>
						<inherited>true</inherited>
						<configuration>
							<showSuccess>false</showSuccess>
							<testFailureIgnore>true</testFailureIgnore>
							<excludes>
								<exclude>**/*Test.class</exclude>
							</excludes>
							<forkMode>always</forkMode>
							<argLine>-Djava.library.path=${r.library.path}</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>create-javadocs</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.9.1</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>runFindbugs</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>3.0.1</version>
						<configuration>
							<xmlOutput>true</xmlOutput>
							<effort>Max</effort>
							<threshold>Low</threshold>
							<failOnError>false</failOnError>
							<excludeFilterFile>findbugs-exclusion.xml</excludeFilterFile>
						</configuration>
						<executions>
							<execution>
								<id>analyze-compile</id>
								<phase>compile</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<modules>

		<module>
    		scoreengine
    	</module>
		<module>
    		scoremodel-api
    	</module>
		<module>
    		scorerulestemplates
    	</module>
		<module>scoremodel</module>
	</modules>

</project>